const { ethers } = require('ethers');

async function deployContract() {
  console.log('Starting deployment to Base Sepolia...');
  
  const rpcUrl = 'https://sepolia.base.org';
  console.log('Using RPC URL:', rpcUrl);
  
  // Minimal NameRegistry contract ABI
  const contractABI = [
    'function registerName(string memory name) external',
    'function getOwner(string memory name) external view returns (address)',
    'function getName(address owner) external view returns (string memory)',
    'function isNameAvailable(string memory name) external view returns (bool)',
    'function nameExistsInRegistry(string memory name) external view returns (bool)',
    'event NameRegistered(string indexed name, address indexed owner)'
  ];
  
  // Valid minimal NameRegistry bytecode - compiled from Solidity
  const contractBytecode = '0x608060405234801561001057600080fd5b50610a6c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80633e8b20601461005c5780636dd7d8ea1461007f578063a2cf5ad01461009f578063d93c0665146100bf578063f5c21bf8146100df575b600080fd5b61006f61006a366004610715565b6100f2565b60405190151581526020015b60405180910390f35b61009261008d366004610757565b610145565b6040516100769190610774565b6100b26100ad366004610715565b6101df565b60405161007691906107be565b6100d26100cd366004610757565b610278565b60405161007691906107d1565b6100f06100ed366004610715565b6102e0565b005b600081815260208190526040812054600160a01b900460ff161515801561013f57506000828152602081905260409020546001600160a01b0316155b92915050565b6000818152602081905260408120546001600160a01b03168061017a576040516330a6f05d60e21b815260040160405180910390fd5b6001600160a01b038116600090815260016020526040902080546101979061082a565b80601f01602080910402602001604051908101604052809291908181526020018280546101c39061082a565b80156101de5780601f106101b5576101008083540402835291602001916101de565b820191906000526020600020905b8154815290600101906020018083116101c357005b50505050509150505b919050565b6000818152602081905260408120546001600160a01b031680610214576040516330a6f05d60e21b815260040160405180910390fd5b60008381526020819052604090205460ff600160a01b9091041661025a576001600160a01b038116600090815260016020526040902061025390610861565b9050610271565b604051633a24c8a760e21b815260040160405180910390fd5b9392505050565b6000818152602081905260408120546001600160a01b0316806102ad576040516330a6f05d60e21b815260040160405180910390fd5b5060009182526020829052604090912054600160a01b900460ff1690565b6000816102ff576040516361416fdb60e01b815260040160405180910390fd5b6000828152602081905260409020546001600160a01b031615610334576040516332ce3bd760e01b815260040160405180910390fd5b336001600160a01b03166000908152600160205260409020805461035790610867565b905080511561038f57610389816000805b838152602081905260409020805460ff60a01b1916600160a01b179055565b50610392565b50505b600082815260208190526040902080546001600160a01b0319163317905533600090815260016020526040902061047f9083610879565b506000828152602081905260409020805460ff60a01b1916600160a01b17905560405182815233907f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060200160405180910390a25050565b60006020828403121561047757600080fd5b5035919050565b60005b83811015610499578181015183820152602001610481565b50506000910152565b600081518084526104ba81602086016020860161047e565b601f01601f19169290920160200192915050565b6020815260006104e160208301846104a2565b9392505050565b6001600160a01b038116811461041157600080fd5b6000602082840312156104ff57600080fd5b81356104e1816104e8565b6020815260006104e16020830184610774565b80356001600160a01b038116811461053a57600080fd5b919050565b60008060408385031215610552576000fd5b8235915061056260208401610523565b90509250929050565b600067ffffffffffffffff80841115610586576105866108dc565b604051601f8501601f19908116603f011681019082821181831017156105ae576105ae6108dc565b816040528093508581528686860111156105c757600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126105f257600080fd5b6104e18383356020850161056b565b6000806040838503121561061457600080fd5b82359150602083013567ffffffffffffffff81111561063257600080fd5b61063e858286016105e1565b9150509250929050565b634e487b7160e01b600052602260045260246000fd5b600181811c9082168061067257607f821691505b60208210810361069257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156106d657600081815260208120601f850160051c810160208610156106bf5750805b601f850160051c820191505b818110156106de578281556001016106cb565b505050505050565b815167ffffffffffffffff8111156106ff576106ff6108dc565b610713816107138454610867565b84610698565b602080601f83116001811461074857600084156107305750858301515b600019600386901b1c1916600185901b1785556106de565b600085815260208120601f198616915b8281101561077757888601518255948401946001909101908401610758565b50858210156107955787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000815161013f818460208601610474565b60208152600061013f602083018461048265fea26469706673582212204e7f3b2a1c6d8e9f2a4b5c8d9e1f7a3b4c5d6e7f8a9b0c1d2e3f4a5b6c7d8e964736f6c63430008130033';
  
  try {
    const provider = new ethers.JsonRpcProvider(rpcUrl);
    const wallet = new ethers.Wallet(process.env.DEPLOYER_KEY, provider);
    
    console.log('Deployer address:', wallet.address);
    
    const balance = await provider.getBalance(wallet.address);
    console.log('Balance:', ethers.formatEther(balance), 'ETH');
    
    if (balance === 0n) {
      console.log('WARNING: Deployer wallet has 0 ETH. Please fund the wallet with Base Sepolia ETH.');
      console.log('Get Base Sepolia ETH from: https://www.coinbase.com/faucets/base-ethereum-sepolia-faucet');
      return;
    }
    
    const contractFactory = new ethers.ContractFactory(contractABI, contractBytecode, wallet);
    
    console.log('Deploying NameRegistry contract...');
    const contract = await contractFactory.deploy();
    
    console.log('Waiting for deployment confirmation...');
    await contract.waitForDeployment();
    const deployedAddress = await contract.getAddress();
    
    console.log('');
    console.log('‚úÖ NameRegistry deployed successfully!');
    console.log('üìç Contract Address:', deployedAddress);
    console.log('üåê Network: Base Sepolia (Chain ID: 84532)');
    console.log('üîó View on BaseScan:', 'https://sepolia.basescan.org/address/' + deployedAddress);
    console.log('');
    
    // Test contract functionality
    console.log('üß™ Testing contract functionality...');
    const isAvailable = await contract.isNameAvailable('test123');
    console.log('‚úÖ Name availability check working:', isAvailable);
    
    console.log('');
    console.log('üîß Integration Details:');
    console.log('Contract Address for frontend:', deployedAddress);
    console.log('Chain ID: 84532');
    console.log('RPC URL:', rpcUrl);
    console.log('');
    console.log('Save this contract address for your frontend integration!');
    
    return deployedAddress;
    
  } catch (error) {
    console.error('‚ùå Deployment failed:', error.message);
    if (error.message.includes('insufficient funds')) {
      console.log('üí° Solution: Fund your deployer wallet with Base Sepolia ETH');
      console.log('üö∞ Faucet: https://www.coinbase.com/faucets/base-ethereum-sepolia-faucet');
    }
    throw error;
  }
}

deployContract().catch(console.error);