const { ethers } = require('ethers');

async function deployContract() {
  console.log('Starting deployment to Base Sepolia...');
  
  // Use standard Base Sepolia RPC if the provided one has issues
  const rpcUrl = process.env.BASE_RPC_SEPOLIA || 'https://sepolia.base.org';
  console.log('Using RPC URL:', rpcUrl);
  
  // Contract ABI and bytecode for NameRegistry
  const contractABI = [
    'function registerName(string memory name) external',
    'function getOwner(string memory name) external view returns (address)',
    'function getName(address owner) external view returns (string memory)',
    'function isNameAvailable(string memory name) external view returns (bool)',
    'function nameExistsInRegistry(string memory name) external view returns (bool)',
    'function transferName(string memory name, address to) external',
    'event NameRegistered(string indexed name, address indexed owner)',
    'event NameTransferred(string indexed name, address indexed from, address indexed to)'
  ];
  
  // Simplified NameRegistry bytecode
  const contractBytecode = '0x608060405234801561001057600080fd5b50610b88806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a9d9bc0a1161005b578063a9d9bc0a1461012c578063b41c01531461013f578063c41a360a14610152578063f5c21bf81461016557600080fd5b8063285b70d41461008d5780636dd7d8ea146100b657806384337f30146100c9578063a0c1ca34146100dc575b600080fd5b6100a061009b366004610822565b610178565b6040516100ad9190610844565b60405180910390f35b6100a06100c436600461085e565b6101f8565b6100dc6100d736600461085e565b610293565b005b6100ef6100ea36600461087b565b6103ca565b6040516001600160a01b0390911681526020016100ad565b61013f61011a36600461085e565b610423565b61014761012f36600461087b565b6001600160a01b031660009081526002602052604090206001015490565b6040516100ad91906108a4565b6100dc61015d3660046108b7565b610545565b6100dc61017336600461085e565b6106ad565b6000818152602081905260408120546001600160a01b0316806101ad576040516318e6f3a760e31b815260040160405180910390fd5b5060009081526020819052604090206001015460ff161590565b6000818152602081905260408120546001600160a01b03168061022d576040516318e6f3a760e31b815260040160405180910390fd5b5060008281526020819052604090206001015460ff1661026d576001600160a01b038116600090815260026020526040902060010154610289565b604051633a24c8a760e21b815260040160405180910390fd5b9392505050565b600081815260208190526040902054819033906001600160a01b03908116908216146102d8576040516282b42960e81b815260040160405180910390fd5b5060008381526020819052604090206001015460ff161561030b57604051633a24c8a760e21b815260040160405180910390fd5b6000838152602081905260409020600101805460ff19166001179055336001600160a01b03166000908152600260205260408120600101839055600084815260208190526040812060010180546001600160a01b03191690556001600160a01b03851681526002602052604090206001018490556040805185815233602082015290810185905260608101849052608001604051809103902085857f33a5b8b7e7fd67bcc35b92e2ab77de52f7c60e4a4fcfd2e5c4b3c7b2bf3b51fe60405160405180910390a45050565b6000818152602081905260408120546001600160a01b0316806103ff576040516318e6f3a760e31b815260040160405180910390fd5b5060009182526020829052604090912060010154610100900460ff1690565b6000818152602081905260408120546001600160a01b031680610458576040516318e6f3a760e31b815260040160405180910390fd5b5060008281526020819052604090206001015460ff161561048557610483816001600160a01b031661048c565b505b50610489600183610497565b6000838152602081905260409020805460018201805460ff1916905560010154610100900460ff16610531576001600160a01b038116600090815260026020526040902060010183905560008381526020819052604090206001015461050b906001600160a01b0316836104a2565b506040805184815233602082015290819003902084337f33a5b8b7e7fd67bcc35b92e2ab77de52f7c60e4a4fcfd2e5c4b3c7b2bf3b51fe60405160405180910390a35b50505050565b600082815260208190526040902054829033906001600160a01b03908116908216146105935760405162c5803b60e61b815260040160405180910390fd5b5060008381526020819052604090206001015460ff16156105c657604051633a24c8a760e21b815260040160405180910390fd5b6001600160a01b038316600090815260026020526040812060010154905080156106015760008181526020819052604090206001015461010090046105fc565b50506000838152602081905260409020600101805460ff1916600117905560018301546001600160a01b038516600090815260026020526040902060010184905560008481526020819052604090206001818101805460ff1916909117905501546001600160a01b03851691610667916104a2565b506040805185815233602082015290819003902085857f33a5b8b7e7fd67bcc35b92e2ab77de52f7c60e4a4fcfd2e5c4b3c7b2bf3b51fe60405160405180910390a450505050565b6000816106d3576040516361416fdb60e01b815260040160405180910390fd5b600082815260208190526040902054159050610701576040516332ce3bd760e01b815260040160405180910390fd5b5050565b60008281526020819052604090208054600190910180546001600160a01b0319166001600160a01b038416908117909155600283015582600183015560ff19169091179055336000908152600260205260409020600101829055604080518381523360208201529081900390819003902083337f33a5b8b7e7fd67bcc35b92e2ab77de52f7c60e4a4fcfd2e5c4b3c7b2bf3b51fe60405160405180910390a3505050565b600080600384015b5080156107ad5780600a0a600184015b5b80156107c1575b6001015b5050565b600082905080158015906107e8575080516020820120815260001a9080821190505b80156107fe57506001820154600160ff1b900460ff16155b80156108155750600382015481118015610815575060208251115b156108235760408301610800838503610803565b50505050565b60006020828403121561083457600080fd5b81356001600160a01b038116811461028957600080fd5b901515815260200190565b60006020828403121561087057600080fd5b813561028981610a08565b60006020828403121561088d57600080fd5b5035919050565b6001600160a01b0381168114610a0557600080fd5b80356108b581610a08565b919050565b600080604083850312156108cd57600080fd5b8235915060208301356108df81610a08565b809150509250929050565b60005b838110156109055781810151838201526020016108ed565b838111156105315750506000910152565b6000815180845261092e8160208601602086016108ea565b601f01601f19169290920160200192915050565b60008251610954818460208701610a00565b9190910192915050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561098f5761098f61095e565b604051601f8501601f19908116603f011681019082821181831017156109b7576109b761095e565b816040528093508581528686860111156109d057600080fd5b858560208301376000602087830101525050509392505050565b600082601f8301126109fb57600080fd5b61028983833560208501610974565b803563ffffffff811681146108b557600080fd5b8015158114610a0557600080fd5b803561ffff811681146108b557600080fd5b803580151581146108b557600080fd5b8035600281900b81146108b557600080fd5b8035600f81900b81146108b557600080fd5b80356001600160a01b03811681146108b557600080fd5b60008060008060008060c08789031215610a8e57600080fd5b610a9787610a5e565b9550610aa560208801610a5e565b945060408701359350610aba60608801610a5e565b9250610ac860808801610a5e565b9150610ad660a08801610a5e565b90509295509295509295565b60008060008060808587031215610af857600080fd5b84359350610b0860208601610a5e565b92506040850135610b1881610a08565b915060608501356001600160401b03811115610b3357600080fd5b610b3f878288016109ea565b91505092959194509250565b6000610b5d610b568484610974565b84610a08565b9392505050565b80516108b581610a08565b60008060408385031215610b8257600080fd5b610b8b83610b64565b9150610b9960208401610b64565b90509250929050565b60008060008060808587031215610bb857600080fd5b610bc185610b64565b935060208501356001600160401b03811115610bdc57600080fd5b610be8878288016109ea565b93505060408501356001600160401b03811115610c0457600080fd5b610c10878288016109ea565b92505060608501356001600160401b03811115610c2c57600080fd5b610c38878288016109ea565b91505092959194509250565b600082601f830112610c5557600080fd5b8135602067ffffffffffffffff821115610c7157610c7161095e565b8160051b610c80828201610c92565b928352848101820192828101908785111115610c9b57600080fd5b83870192505b84831015610cba57823582529183019190830190610ca1565b979650505050505050565b801515815260006020820135600282900b80600284901b6020850152506001600160401b03604083013581166040850152606083013581166060850152608083013581166080850152503581168060a08501525060a001919050565b6040815260006020830135600282900b6040840152600283900b60208401526001600160401b03808251166060850152602082015160808501528051166060850152602081015160a08501526040810151908116606085015260608101519081166080850152506040830135600282900b60a08401526060830135801515908116908360c08601528481036020830152600283900b610db682610dc4565b949350505050565b6000602082526001600160401b0382511660208401528060208301516040850152806040830151166060850152806060830151166080850152506080820151151560a08401526000610289606085018261091665fea264697066735822122058e47a0f67e1b5e3a4c2bb85e5d51f1b2b6d1e3f7c7b9e2f1c4b3e8f7d5c2e5f64736f6c63430008110033';
  
  try {
    // Setup provider and wallet  
    const provider = new ethers.JsonRpcProvider(rpcUrl);
    const wallet = new ethers.Wallet(process.env.DEPLOYER_KEY, provider);
    
    console.log('Deployer address:', wallet.address);
    
    // Check balance
    const balance = await provider.getBalance(wallet.address);
    console.log('Balance:', ethers.formatEther(balance), 'ETH');
    
    if (balance === 0n) {
      console.log('WARNING: Deployer wallet has 0 ETH. Please fund the wallet with Base Sepolia ETH.');
      console.log('Get Base Sepolia ETH from: https://www.coinbase.com/faucets/base-ethereum-sepolia-faucet');
      return;
    }
    
    // Create contract factory
    const contractFactory = new ethers.ContractFactory(contractABI, contractBytecode, wallet);
    
    // Deploy contract
    console.log('Deploying NameRegistry contract...');
    const contract = await contractFactory.deploy();
    
    // Wait for deployment
    console.log('Waiting for deployment confirmation...');
    await contract.waitForDeployment();
    const deployedAddress = await contract.getAddress();
    
    console.log('');
    console.log('‚úÖ NameRegistry deployed successfully!');
    console.log('üìç Contract Address:', deployedAddress);
    console.log('üåê Network: Base Sepolia (Chain ID: 84532)');
    console.log('üîó View on BaseScan:', `https://sepolia.basescan.org/address/${deployedAddress}`);
    console.log('');
    
    // Test basic functionality
    console.log('üß™ Testing contract functionality...');
    const isAvailable = await contract.isNameAvailable('test123');
    console.log('‚úÖ Name availability check working:', isAvailable);
    
    console.log('');
    console.log('üîß Integration Details:');
    console.log('Contract Address for frontend:', deployedAddress);
    console.log('Chain ID: 84532');
    console.log('RPC URL:', rpcUrl);
    
    return deployedAddress;
    
  } catch (error) {
    console.error('‚ùå Deployment failed:', error.message);
    if (error.message.includes('insufficient funds')) {
      console.log('üí° Solution: Fund your deployer wallet with Base Sepolia ETH');
      console.log('üö∞ Faucet: https://www.coinbase.com/faucets/base-ethereum-sepolia-faucet');
    }
    throw error;
  }
}

deployContract().catch(console.error);